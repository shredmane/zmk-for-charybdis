#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1   &kp N2  &kp N3          &kp N4     &kp N5          &kp N6            &kp N7         &kp N8     &kp N9   &kp N0       &kp BSPC
&kp TAB         &kp Q    &kp W   &kp E           &kp R      &kp T           &kp Y             &kp U          &kp I      &kp O    &kp P        &kp MINUS
&kp LCTRL       &kp A    &kp S   &kp D           &kp F      &kp G           &kp H             &kp J          &kp K      &kp L    &kp SEMI     &kp APOS
&kp LEFT_SHIFT  &lt 3 Z  &kp X   &kp C           &kp V      &kp B           &kp N             &kp M          &kp COMMA  &kp DOT  &lt 3 SLASH  &kp DELETE
                                 &lt 1 UP_ARROW  &kp SPACE  &lt 3 ENTER     &lt 2 LEFT_ARROW  &kp BACKSPACE
                                                 &kp DOWN   &kp LEFT_GUI    &kp RIGHT
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&kp TILDE         &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp GRAVE         &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp LBKT       &kp RBKT   &kp F1         &kp F2        &kp F3                &kp F4                 &kp DEL
&kp LEFT_CONTROL  &kp NUMBER_4     &kp N5        &kp NUMBER_6  &kp NUMBER_8  &none          &kp BSLH   &kp F5         &kp F6        &kp F7                &kp F8                 &kp PAGE_UP
&kp LSHFT         &kp N7           &kp N8        &kp N9        &kp EQUAL     &kp MINUS      &trans     &kp F9         &kp F10       &kp F11               &kp F12                &kp PAGE_DOWN
                                                 &kp LEFT_WIN  &kp SPACE     &trans         &kp ENTER  &kp BACKSPACE
                                                               &none         &none          &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F12           &kp F1      &kp F2      &kp F3         &kp F4         &kp F5          &kp F6        &kp F7         &kp F8    &kp F9     &kp F10  &kp F11
&kp LS(GRAVE)     &kp LS(N1)  &kp LS(N2)  &kp LS(N3)     &kp LS(N4)     &kp LS(LBKT)    &kp LS(RBKT)  &none          &trans    &none      &none    &trans
&kp LEFT_CONTROL  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)     &kp LS(N8)     &none           &kp LS(BSLH)  &trans         &kp UP    &trans     &trans   &trans
&kp LEFT_SHIFT    &kp LS(N9)  &kp LS(N0)  &kp LS(MINUS)  &kp LS(EQUAL)  &none           &none         &kp LEFT       &kp DOWN  &kp RIGHT  &none    &trans
                                          &kp LEFT_ALT   &kp SPACE      &kp ENTER       &trans        &kp BACKSPACE
                                                         &trans         &trans          &none
            >;
        };

        Mouse {
            bindings = <
&none           &none         &none         &none         &none         &none         &none           &none      &none         &none         &none         &none
&none           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none         &bt BT_CLR    &bt BT_CLR      &none      &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
&kp LCTRL       &trans        &trans        &mkp MCLK     &trans        &none         &msc SCRL_UP    &trans     &mkp MCLK     &trans        &trans        &kp RIGHT_ALT
&kp LEFT_SHIFT  &trans        &mkp RCLK     &mo 0         &mkp LCLK     &mo 0         &msc SCRL_DOWN  &mkp LCLK  &mo 0         &mkp RCLK     &trans        &kp RIGHT_CONTROL
                                            &mo 0         &mkp LCLK     &mkp RCLK     &mkp RCLK       &mkp LCLK
                                                          &kp LEFT_ALT  &trans        &mkp MCLK
            >;
        };
    };
};
